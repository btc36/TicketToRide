{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"React\"","webpack:///./src/Models/GameList.ts","webpack:///./src/index.tsx","webpack:///external \"ReactDOM\"","webpack:///./src/ViewModels/LoginRegisterViewModel.ts","webpack:///./src/Views/LoginRegisterView.tsx","webpack:///./src/ViewModels/ILoginRegisterViewModel.ts","webpack:///./src/ViewModels/GameListViewModel.ts","webpack:///./src/Views/GameListView.tsx","webpack:///./src/ViewModels/IGameListViewModel.ts","webpack:///./src/ViewModels/GameLobbyViewModel.ts","webpack:///./src/Views/GameLobbyView.tsx","webpack:///./src/ViewModels/IGameLobbyViewModel.ts","webpack:///./src/Models/ClientRoot.ts","webpack:///./src/Models/Session.ts","webpack:///./src/Services/InternalClientFacade.ts","webpack:///./src/Server/ServerProxy.ts","webpack:///./src/Server/ClientCommandObjects.ts","webpack:///./src/Server/ClientCommunicator.ts","webpack:///./src/Server/Serializer.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","React","GameList","this","games","Array","addGame","game","push","removeGame","gameId","length","getGameID","splice","replaceGameList","newGameList","getGames","ReactDOM","LoginRegisterViewModel_1","GameListViewModel_1","GameLobbyViewModel_1","ClientRoot_1","InternalClientFacade_1","ServerProxy_1","initialState","page","MainComponent","_super","props","_this","state","__extends","render","createElement","LoginRegisterViewModel","main","services","GameListViewModel","GameLobbyViewModel","Component","root","ClientRoot","serverProxy","ServerProxy","internalClientFacade","InternalClientFacade","document","getElementById","LoginRegisterView_1","ILoginRegisterViewModel_1","apply","arguments","update","updateType","data","setState","onLoginButtonPressed","e","preventDefault","login","loginUserName","loginPassword","onRegisterButtonPressed","register","onLoginUserNameChange","target","onLoginPasswordChange","onRegisterUserNameChange","registerUserName","onRegisterPasswordChange","registerPassword","onRegisterConfirmPasswordChange","registerConfirmPassword","LoginRegisterView","component","className","onSubmit","type","onChange","errorMessage","GameListView_1","IGameListViewModel_1","gameList","createGameButtonPressed","createGame","createGameNumPlayers","createGameName","joinGameButtonPressed","String","selectedGame","id","joinGame","tableRowPressed","index","onCreateGameNameChange","onCreateGameNumPlayersChange","isJoinGameButtonDisabled","GameListView","rows","onClick","getGameName","getMaxPlayers","getNumPlayers","maxPlayers","disabled","initialGameList","GameLobbyView_1","IGameLobbyViewModel_1","startGameButtonPressed","alert","GameLobbyView","players","playerList","GameList_1","Session_1","myPlayer","lobby","session","Session","observers","attach","detach","notify","_i","_a","transitionPage","pageName","setCurrentPage","getGameList","setCurrentGame","getCurrentUser","getUsername","updateGameList","startGame","loginResults","wasSuccessful","setLoggedInUser","registerResults","currentPage","loggedInUser","player","proxy","username","password","numPlayers","gameName","me","ClientCommandObjects_1","ClientCommunicator_1","hostIn","portIn","host","port","confirm","url","command","ClientCommandObjects","ClientCommunicator","sendCommand","classNameIn","methodNameIn","paramTypesIn","paramValuesIn","methodName","paramTypes","paramValues","Serializer_1","serverUrlIn","serverPortIn","serverUrl","serverPort","serializer","Serializer","toJSON","request","XMLHttpRequest","open","setRequestHeader","onload","currentSerializer","status","parseJSON","responseText","onerror","send","executeCommands","commands","JSON","stringify","parse"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = React;","import { LobbyGame } from \"./LobbyGame\"\n\nexport class GameList {\n    games: Array<LobbyGame>;\n\n    [key: string]: any;\n\n    constructor() {\n        this.games = new Array<LobbyGame>();\n    }\n\n    addGame(game: LobbyGame): void {\n        this.games.push(game);\n    }\n\n    removeGame(gameId: string): void {\n        for (var i = this.games.length - 1; i >= 0; --i) {\n            if (this.games[i].getGameID() == gameId) {\n                this.games.splice(i, 1);\n            }\n        }\n    }\n\n    replaceGameList(newGameList: Array<LobbyGame>): void {\n        this.games = newGameList;\n    }\n\n    getGames(): Array<LobbyGame> {\n        return this.games;\n    }\n\n}\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport { LoginRegisterViewModel } from './ViewModels/LoginRegisterViewModel';\nimport { GameListViewModel } from './ViewModels/GameListViewModel';\nimport { GameLobbyViewModel } from './ViewModels/GameLobbyViewModel';\n\nimport { ClientRoot } from './Models/ClientRoot';\nimport { InternalClientFacade } from './Services/InternalClientFacade';\nimport { ServerProxy } from './Server/ServerProxy';\n\nexport const initialState = {\n  \"page\": \"loginRegister\"\n};\n\nexport type State = Readonly<typeof initialState>;\n\nclass MainComponent extends React.Component<any, any> {\n  state: State;\n\n  constructor(props: any) {\n    super(props);\n    this.state = initialState;\n  }\n\n  render(): JSX.Element {\n    if (this.state.page == \"loginRegister\") {\n      return <LoginRegisterViewModel main={this} services={this.props.services} />;\n    } else if (this.state.page == \"gameList\") {\n      return <GameListViewModel main={this} services={this.props.services} />;\n    } else if (this.state.page == \"gameLobby\") {\n      return <GameLobbyViewModel main={this} services={this.props.services} />;\n    }\n  }\n}\n\nconst root = new ClientRoot();\nconst serverProxy = new ServerProxy(\"localhost\", \"8080\");\nconst internalClientFacade = new InternalClientFacade(serverProxy, root);\n\nReactDOM.render(\n    <MainComponent services={internalClientFacade}/>,\n    document.getElementById(\"example\")\n);\n","module.exports = ReactDOM;","import * as React from \"react\";\nimport { LoginRegisterView } from \"../Views/LoginRegisterView\";\nimport { initialState, State, ILoginRegisterViewModel } from \"./ILoginRegisterViewModel\";\nimport { IObserver } from \"./IObserver\";\nimport { ViewModelProps } from \"./ViewModelProps\";\n\nexport class LoginRegisterViewModel extends React.Component<ViewModelProps, State> implements ILoginRegisterViewModel, IObserver {\n\n  state: State = initialState;\n\n  update = (updateType: string, data: any) => {\n    if (updateType == \"transitionPage\") {\n      this.props.main.setState({\"page\": data});      \n    }\n  }\n\n  onLoginButtonPressed = (e: any) => {\n    e.preventDefault();\n    this.props.services.login(this.state.loginUserName, this.state.loginPassword);\n  }\n\n  onRegisterButtonPressed = (e: any) => {\n    e.preventDefault();\n    this.props.services.register(this.state.loginUserName, this.state.loginPassword);\n  }\n\n  onLoginUserNameChange = (e: any) => {\n    this.setState({\"loginUserName\": e.target.value});\n  }\n\n  onLoginPasswordChange = (e: any) => {\n    this.setState({\"loginPassword\": e.target.value});\n  }\n\n  onRegisterUserNameChange = (e: any) => {\n    this.setState({\"registerUserName\": e.target.value});\n  }\n\n  onRegisterPasswordChange = (e: any) => {\n    this.setState({\"registerPassword\": e.target.value});\n  }\n\n  onRegisterConfirmPasswordChange = (e: any) => {\n    this.setState({\"registerConfirmPassword\": e.target.value});\n  }\n\n  render(): JSX.Element {\n    return LoginRegisterView(this);\n  }\n}\n","import * as React from \"react\";\nimport * as I from \"../ViewModels/ILoginRegisterViewModel\";\n\nexport const LoginRegisterView = (component: I.ILoginRegisterViewModel) => {\n    return (\n      <div className=\"view\">\n        <div className=\"half-partition\">\n          <h1>Login</h1>\n          <form onSubmit={component.onLoginButtonPressed}>\n            <p>\n              <label>User Name:<br />\n                <input type=\"text\" name=\"login-username\" value={component.state.loginUserName} onChange={component.onLoginUserNameChange} />\n              </label> \n            </p>\n            <p>\n              <label>Password:<br />\n                <input type=\"text\" name=\"login-password\" value={component.state.loginPassword} onChange={component.onLoginPasswordChange}/>\n              </label>\n            </p>\n            <p><input type=\"submit\" value=\"Log in\" /></p>\n          </form>\n        </div>\n        <div className=\"half-partition\">\n          <h1>Register</h1>\n          <form onSubmit={component.onRegisterButtonPressed}>\n            <p>\n              <label>User Name:<br />\n                <input type=\"text\" name=\"register-username\" value={component.state.registerUserName} onChange={component.onRegisterUserNameChange}/>\n              </label>\n            </p>\n            <p>\n              <label>Password:<br />\n                <input type=\"text\" name=\"register-password\" value={component.state.registerPassword} onChange={component.onRegisterPasswordChange}/>\n              </label>\n            </p>\n            <p>\n              <label>Confirm password:<br />\n                <input type=\"text\" name=\"register-confirm-password\" value={component.state.registerConfirmPassword} onChange={component.onRegisterConfirmPasswordChange}/>\n              </label>\n            </p>\n            <input type=\"submit\" value=\"Register\" />\n          </form>\n        </div>\n      </div>\n    );\n}\n","export const initialState = {\n  loginUserName: \"\",\n  loginPassword: \"\",\n  registerUserName: \"\",\n  registerPassword: \"\",\n  registerConfirmPassword: \"\",\n  errorMessage: \"\"\n};\n\nexport type State = Readonly<typeof initialState>;\n\nexport interface ILoginRegisterViewModel {\n  state: State;\n  onLoginButtonPressed(e: any): void;\n  onRegisterButtonPressed(e: any): void;\n  onLoginUserNameChange(e: any): void;\n  onLoginPasswordChange(e: any): void;\n  onRegisterUserNameChange(e: any): void;\n  onRegisterPasswordChange(e: any): void;\n  onRegisterConfirmPasswordChange(e: any): void;\n}\n","import * as React from \"react\";\nimport { GameListView } from \"../Views/GameListView\";\nimport { initialState, State, IGameListViewModel } from \"./IGameListViewModel\";\nimport { IObserver } from \"./IObserver\";\nimport { ViewModelProps } from \"./ViewModelProps\";\n\nexport class GameListViewModel extends React.Component<ViewModelProps, State> implements IGameListViewModel, IObserver {\n\n  state: State = initialState;\n\n  update = (updateType: string, data: any) => {\n    if (updateType == \"transitionPage\") {\n      this.props.main.setState({\"page\": data});      \n    } else if (updateType == \"updateGameList\") {\n      this.setState({\"gameList\": data});\n    }\n  }\n\n  createGameButtonPressed = (e: any) => {\n    e.preventDefault();\n    this.props.services.createGame(this.state.createGameNumPlayers, this.state.createGameName);\n  }\n\n  joinGameButtonPressed = (e: any) => {\n    e.preventDefault();\n    const gameId: string = String(this.state.gameList[this.state.selectedGame].id);\n    this.props.services.joinGame(gameId);\n  }\n\n  tableRowPressed = (index: number) => {\n    this.setState({selectedGame: index});\n  }\n\n  onCreateGameNameChange = (e: any) => {\n    this.setState({createGameName: e.target.value});\n  }\n\n  onCreateGameNumPlayersChange = (e: any) => {\n    this.setState({createGameNumPlayers: e.target.value});\n  }\n\n\n  isJoinGameButtonDisabled = () => {\n    return this.state.selectedGame != -1;\n  }\n\n  render(): JSX.Element {\n    return GameListView(this);\n  }\n}\n","import * as React from \"react\";\nimport * as I from \"../ViewModels/IGameListViewModel\";\n\nexport const GameListView = (component: I.IGameListViewModel) => {\n  const rows = [];\n  const gameList = component.state.gameList.getGames();\n  for (let i = 0; i < gameList.length; i++) {\n    rows.push(\n      <tr onClick={() => component.tableRowPressed(i)} className={component.state.selectedGame == i ? \"active\" : \"\"} key={i}>\n        <td>{gameList[i].getGameID()}</td>\n        <td>{gameList[i].getGameName()}</td>\n        <td>{gameList[i].getMaxPlayers()}</td>\n        <td>{gameList[i].getNumPlayers()}/{gameList[i].maxPlayers}</td>\n      </tr>\n    );\n  }\n  return (\n    <div className=\"view\">\n      <div className=\"half-partition\">\n        <table>\n          <tbody>\n            <tr>\n              <th>#</th>\n              <th>Name</th>\n              <th>Players</th>\n              <th>In-Game</th>\n            </tr>\n            {rows}\n          </tbody>\n        </table>\n        <p>\n          <button onClick={component.joinGameButtonPressed} disabled={component.state.selectedGame == -1}>Join Game</button>\n        </p>\n      </div>\n      <div className=\"half-partition\">\n        <form onSubmit={component.createGameButtonPressed}>\n          <p>\n            <label>Name:<br />\n              <input type=\"text\" value={component.state.createGameName} onChange={component.onCreateGameNameChange}/>\n            </label>\n          </p>\n          <p>\n            <label>Number of players:<br />\n              <input type=\"text\" value={component.state.createGameNumPlayers} onChange={component.onCreateGameNumPlayersChange}/>\n            </label>\n          </p>\n          <input type=\"submit\" value=\"Create Game\" className=\"wide-button\" />\n        </form>\n      </div>\n    </div>\n  );\n}\n","import { GameList } from \"../Models/GameList\";\n\nconst initialGameList: GameList = new GameList();\n\nexport const initialState = {\n  gameList: initialGameList,\n  selectedGame: -1,\n  createGameName: \"\",\n  createGameNumPlayers: 0\n};\n\nexport type State = Readonly<typeof initialState>;\n\nexport interface IGameListViewModel {\n  state: State;\n  createGameButtonPressed(e: any): void;\n  joinGameButtonPressed(e: any): void;\n  tableRowPressed(index: number): void;\n  onCreateGameNameChange(e: any): void;\n  onCreateGameNumPlayersChange(e: any): void;\n  isJoinGameButtonDisabled(): boolean;\n}\n","import * as React from \"react\";\nimport { GameLobbyView } from \"../Views/GameLobbyView\";\nimport { initialState, State, IGameLobbyViewModel } from \"./IGameLobbyViewModel\";\nimport { IObserver } from \"./IObserver\";\nimport { ViewModelProps } from \"./ViewModelProps\";\n\nexport class GameLobbyViewModel extends React.Component<ViewModelProps, State> implements IGameLobbyViewModel, IObserver {\n\n  state: State = initialState;\n\n  update = (updateType: string, data: any) => {\n    if (updateType == \"transitionPage\") {\n      this.props.main.setState({\"page\": data});      \n    }\n  }\n\n  startGameButtonPressed = (e: any) => {\n    e.preventDefault();\n    alert(\"starting game...\");\n  }\n\n  render(): JSX.Element {\n    return GameLobbyView(this);\n  }\n}\n","import * as React from \"react\";\nimport * as I from \"../ViewModels/IGameLobbyViewModel\";\n\nexport const GameLobbyView  = (component: I.IGameLobbyViewModel) => {\n  const players = [];\n  const playerList = component.state.playerList;\n  for (let i = 0; i < playerList.length; i++) {\n    players.push(\n      <li>{playerList[i]}</li>\n    );\n  }\n  return (\n    <div className=\"view\">\n      <div className=\"half-partition\">\n        <p><b><u>Players</u></b></p>\n        <ul>\n          {players}\n        </ul>\n        <p><button onClick={component.startGameButtonPressed} disabled={playerList.length < 2}>Start Game</button></p>\n      </div>\n    </div>\n  );\n}\n","const initialPlayerList: string[] = [];\n\nexport const initialState = {\n  playerList: initialPlayerList\n};\n\nexport type State = Readonly<typeof initialState>;\n\nexport interface IGameLobbyViewModel {\n  state: State;\n  startGameButtonPressed(e: any): void;\n}\n","import { GameList } from \"./GameList\"\nimport { Player } from \"./Player\"\nimport { LobbyGame } from \"./LobbyGame\"\nimport { Session } from \"./Session\"\nimport { IObserver } from \"../ViewModels/IObserver\"\nimport { ISubject } from \"./ISubject\"\n\n\nexport class ClientRoot implements ISubject {\n    gameList: GameList;\n    myPlayer: Player;\n    lobby: LobbyGame;\n    session: Session;\n    observers: Array<IObserver>;\n    //What is this constructor, and all the other classes. Does the client start out empty?\n    constructor() {\n        this.gameList = new GameList();\n        this.myPlayer = null;\n        this.lobby = null;\n        this.session = new Session();\n        this.observers = new Array<IObserver>();\n    }\n    //add an observer \n    attach(o: IObserver) {\n        this.observers.push(o); \n    }\n    //remove an observer\n    detach(o: IObserver) {\n\n    }\n\n    notify(updateType: string, data: any) {\n        for (var o of this.observers) {\n            o.update(updateType, data);\n        }\n    }\n    transitionPage(pageName: string) {\n        this.session.setCurrentPage(pageName);\n        this.notify(\"transitionPage\", pageName);\n    }\n\n\n    getGameList(): Array<LobbyGame> {\n        let games = this.gameList.getGames();\n        return games;\n    }\n\n    joinGame(gameId: number) {\n        this.myPlayer.setCurrentGame(gameId)\n        this.transitionPage(\"lobbyGame\");\n    }\n \n    getCurrentUser(){\n    \treturn this.myPlayer.getUsername();\n    }\n\n    updateGameList(gameList: Array<LobbyGame>) {\n        this.gameList.replaceGameList(gameList);\n        this.notify(\"updateGameList\", this.gameList);\n    }\n\n    startGame(gameId:string){\n    \tthis.notify(\"startGame\",gameId);\n    }\n    /*\n     * loginRegister\n     * gameList\n     * gameLobby\n     */\n    loginResults(wasSuccessful: boolean, errorMessage: string) {\n        if (wasSuccessful) {\n            this.session.setLoggedInUser(this.myPlayer);\n            this.transitionPage(\"gameList\");\n        } else {\n            this.notify(\"error\", errorMessage);\n        }\n    }\n\n    registerResults(wasSuccessful: boolean, errorMessage: string) {\n        if (wasSuccessful) {\n            this.session.setLoggedInUser(this.myPlayer);\n            this.transitionPage(\"gameList\");\n        } else {\n            this.notify(\"error\", errorMessage);\n        }\n    }\n\n\n}\n","import {Player} from \"./Player\"\n\nexport class Session {\n   // authToken: string;\n    currentPage: string;\n    loggedInUser: Player;\n    \n    constructor() {\n        //this.authToken = auth;\n       this.currentPage = \"Login\";\n       this.loggedInUser = null;\n    }\n\n   /* get getAuth(): string {\n        return this.authToken;\n    }\n\n    set setAuth(auth: string) {\n        this.authToken = auth;\n    }\n    */\n    get getCurrentPage(): string {\n        return this.currentPage;\n    }\n\n    setCurrentPage(page: string) {\n        this.currentPage = page;\n    }\n\n    get getLoggedInUser(): Player {\n        return this.loggedInUser;\n    }\n\n    setLoggedInUser(player: Player) {\n        this.loggedInUser = player;\n    }\n\n}\n","import { ServerProxy } from \"../Server/ServerProxy\";\nimport { ClientRoot } from \"../Models/ClientRoot\";\n\nexport class InternalClientFacade {\n    proxy: ServerProxy;\n    root: ClientRoot;\n\n    constructor(proxy:ServerProxy,root:ClientRoot) {\n        this.proxy = proxy;\n        this.root = root;\n    }\n\n    login(username: string, password: string) {\n        this.proxy.login(username, password);\n    }\n\n    register(username: string, password: string) {\n        this.proxy.register(username, password, \"YES\");\n    }\n\n    createGame(numPlayers: number, gameName: string) {\n    \t  const me = this.root.getCurrentUser();\n        this.proxy.createGame(me, numPlayers, gameName);\n    }\n\n    getGameList(){\n        this.proxy.getGameList();\n    }\n\n    joinGame(gameId: string) {\n    \t  const me = this.root.getCurrentUser();\n        this.proxy.joinGame(me, gameId);\n   }\n\n    startGame(gameId:string){\n    \tthis.proxy.startGame(gameId);\n    }\n\n}\n","import { ClientCommandObjects } from \"./ClientCommandObjects\";\nimport { ClientCommunicator } from \"./ClientCommunicator\";\n//import { Serializer } from \"./serializer\";\n\nexport class ServerProxy {\n    host: string;\n    port: string;\n    constructor(public hostIn: string, public portIn: string) {\n        this.host = hostIn;\n        this.port = portIn;\n    }\n    public register(username:string, password:string, confirm:string){\n        var url = \"http://\" + this.host + \":\" + this.port + \"/register\";\n        var command = new ClientCommandObjects(\"ServerFacade\", \"register\", [\"string\", \"string\"], [username, password]);\n        var communicator = new ClientCommunicator(url, this.port);\n        communicator.sendCommand(command);\n    }\n    public login(username: string, password: string){\n        var url = \"http://\" + this.host + \":\" + this.port + \"/login\";\n        var command = new ClientCommandObjects(\"ServerFacade\", \"login\", [\"string\", \"string\"], [username, password]);\n        var communicator = new ClientCommunicator(url, this.port);\n        communicator.sendCommand(command);\n    }\n    public createGame(username: string, numPlayers: number, gameName: string){\n        var url = \"http://\" + this.host + \":\" + this.port + \"/creategame\";\n        var command = new ClientCommandObjects(\"ServerFacade\", \"createGame\", [\"string\", \"string\", \"number\"], [username, gameName, numPlayers]);\n        var communicator = new ClientCommunicator(url, this.port);\n        communicator.sendCommand(command);\n    }\n    public joinGame(username: string, gameId: string){\n        var url = \"http://\" + this.host + \":\" + this.port + \"/joingame\";\n        var command = new ClientCommandObjects(\"ServerFacade\", \"joinGame\", [\"string\", \"string\"], [username, gameId]);\n        var communicator = new ClientCommunicator(url, this.port);\n        communicator.sendCommand(command);\n    }\n    public startGame(gameId: string){\n        var url = \"http://\" + this.host + \":\" + this.port + \"/startgame\";\n        var command = new ClientCommandObjects(\"ServerFacade\", \"startGame\", [\"string\"], [gameId]);\n        var communicator = new ClientCommunicator(url, this.port);\n        communicator.sendCommand(command);\n    }\n    public getGameList(){\n        var url = \"http://\" + this.host + \":\" + this.port + \"/getgamelist\";\n        var command = new ClientCommandObjects(\"ServerFacade\", \"getGameList\", [], []);\n        var communicator = new ClientCommunicator(url, this.port);\n        communicator.sendCommand(command);\n    }\n}\n","export class ClientCommandObjects {\n    className: string;\n    methodName: string;\n    paramTypes: any[];\n    paramValues: any[];\n    constructor(public classNameIn: string, public methodNameIn: string, public paramTypesIn: any[], public paramValuesIn: any[]) {\n        this.className = classNameIn;\n        this.methodName = methodNameIn;\n        this.paramTypes = paramTypesIn;\n        this.paramValues = paramValuesIn;\n    }\n}\n","import { ClientCommandObjects } from \"./clientCommandObjects\";\nimport { Serializer } from \"./Serializer\";\n\nexport class ClientCommunicator {\n    serverUrl: string;\n    serverPort: string;\n    serializer: Serializer;\n    constructor(public serverUrlIn: string, public serverPortIn: string) {\n        this.serverUrl = serverUrlIn;\n        this.serverPort = serverPortIn;\n        this.serializer = new Serializer();\n    }\n    public sendCommand(command: ClientCommandObjects){\n        var data = this.serializer.toJSON(command);\n        var request = new XMLHttpRequest();\n        request.open('POST', this.serverUrl, true);\n        request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');\n        request.onload = function() {\n            var currentSerializer = new Serializer();\n            if (request.status >= 200 && request.status < 400) {\n              // Success!\n              var result = currentSerializer.parseJSON(request.responseText);\n            } else {\n              // We reached our target server, but it returned an error\n          \n            }\n          };\n          \n          request.onerror = function() {\n            // There was a connection error of some sort\n          };\n        request.send(data);\n    }\n\n    public executeCommands(commands: ClientCommandObjects[]){\n\n    }\n}\n","import { ClientCommandObjects } from \"./ClientCommandObjects\";\n\nexport class Serializer {\n    constructor() {\n    }\n    public toJSON(command: ClientCommandObjects){\n        var myCommand = JSON.stringify(command);\n        return myCommand;\n    }\n    public parseJSON(command: string){\n        var myCommand: ClientCommandObjects = JSON.parse(command);\n        return myCommand;\n    }\n}"],"sourceRoot":""}