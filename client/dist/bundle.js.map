{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Models/ChatRoom.ts","webpack:///./src/Models/ClientRoot.ts","webpack:///./src/Models/FaceUpCards.ts","webpack:///./src/Models/Game.ts","webpack:///./src/Models/GameList.ts","webpack:///./src/Models/GameMap.ts","webpack:///./src/Models/IngameClientRoot.ts","webpack:///./src/Models/LobbyGame.ts","webpack:///./src/Models/Player.ts","webpack:///./src/Models/Session.ts","webpack:///./src/Models/TrainCard.ts","webpack:///./src/Server/ClientCommandObjects.ts","webpack:///./src/Server/ClientCommunicator.ts","webpack:///./src/Server/IngameServerProxy.ts","webpack:///./src/Server/Poller.ts","webpack:///./src/Server/Serializer.ts","webpack:///./src/Server/ServerProxy.ts","webpack:///./src/Services/ExternalClientFacade.ts","webpack:///./src/Services/IngameExternalClientFacade.ts","webpack:///./src/Services/IngameInternalClientFacade.ts","webpack:///./src/Services/InternalClientFacade.ts","webpack:///./src/ViewModels/GameListViewModel.ts","webpack:///./src/ViewModels/GameLobbyViewModel.ts","webpack:///./src/ViewModels/IGameListViewModel.ts","webpack:///./src/ViewModels/IGameLobbyViewModel.ts","webpack:///./src/ViewModels/ILoginRegisterViewModel.ts","webpack:///./src/ViewModels/LoginRegisterViewModel.ts","webpack:///./src/Views/GameListView.tsx","webpack:///./src/Views/GameLobbyView.tsx","webpack:///./src/Views/LoginRegisterView.tsx","webpack:///./src/index.tsx","webpack:///external \"React\"","webpack:///external \"ReactDOM\""],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.tsx\");\n","import { ChatMessage } from \"./ChatMessage\";\n\nexport class ChatRoom {\n    gameID: string;\n    chatHistory: Array<ChatMessage>;\n\n    constructor(gameID: string, chatHistory: Array<ChatMessage>) {\n        this.gameID = gameID;\n        this.chatHistory = chatHistory;\n    }\n\n    getChatHistory() {\n        return this.chatHistory;\n    }\n\n    setChatHistory(chats: Array<ChatMessage>) {\n        this.chatHistory = chats;\n    }\n}","import { GameList } from \"./GameList\"\nimport { Player } from \"./Player\"\nimport { LobbyGame } from \"./LobbyGame\"\nimport { Session } from \"./Session\"\nimport { IObserver } from \"../ViewModels/IObserver\"\nimport { ISubject } from \"./ISubject\"\n\n\nexport class ClientRoot implements ISubject {\n    gameList: GameList;\n    myPlayer: Player;\n    lobby: LobbyGame;\n    session: Session;\n    observers: Array<IObserver>;\n\n    constructor() {\n        this.gameList = new GameList();\n        this.myPlayer = null;\n        this.lobby = null;\n        this.session = new Session();\n        this.observers = new Array<IObserver>();\n    }\n\n    public attach(o: IObserver) {\n        this.observers.push(o);\n    }\n\n    public detach(o: IObserver) {\n\n    }\n\n    notify(updateType: string, data: any) {\n        for (const o of this.observers) {\n            if (o != null) {\n                o.update(updateType, data);\n            }\n        }\n    }\n    transitionPage(pageName: string) {\n        this.session.setCurrentPage(pageName);\n        this.notify(\"transitionPage\", pageName);\n    }\n\n\n    getGameList(): Array<LobbyGame> {\n        let games = this.gameList.getGames();\n        return games;\n    }\n\n    getGameIdForUsername(username: string) {\n        let games = this.gameList.getGames();\n        for (let i = 0; i < games.length; i++) {\n            for (let j = 0; j < games[i].playerList.length; j++) {\n                if (games[i].playerList[j].username == username) {\n                    return games[i].gameID;\n                }\n            }\n        }\n    }\n\n    getPlayerList(gameId: string) {\n        let game = this.gameList.findGameById(gameId);\n        return game.getPlayerList();\n    }\n\n    joinGame(gameId: string) {\n        let game = this.gameList.findGameById(gameId);\n        game.addPlayer(this.myPlayer);\n        this.transitionPage(\"lobbyGame\");\n    }\n\n    getCurrentUser() {\n        return this.myPlayer.getUsername();\n    }\n\n    updateGameList(wasSuccessful: boolean, gameList: GameList, errorMessage: string) {\n        if (wasSuccessful) {\n            this.gameList.replaceGameList(gameList.getGames());\n            this.notify(\"updateGameList\", this.gameList);\n        } else {\n            this.notify(\"error\", errorMessage);\n        }\n    }\n\n    startGame(gameId: string) {\n        this.notify(\"startGame\", gameId);\n    }\n\n    loginResults(wasSuccessful: boolean, data: string) {\n        if (wasSuccessful) {\n            this.myPlayer = new Player(data);\n            this.session.setLoggedInUser(this.myPlayer);\n            this.transitionPage(\"gameList\");\n        } else {\n            this.notify(\"error\", data);\n        }\n    }\n\n    registerResults(wasSuccessful: boolean, data: string) {\n        if (wasSuccessful) {\n            this.myPlayer = new Player(data);\n            this.session.setLoggedInUser(this.myPlayer);\n            this.transitionPage(\"gameList\");\n        } else {\n            this.notify(\"error\", data);\n        }\n    }\n\n\n}\n","import { TrainCard } from \"./TrainCard\";\n\nexport class FaceUpCards {\n  faceUpCards: Array<TrainCard>;\n\n  constructor(faceUpCards: Array<TrainCard>) {\n    this.faceUpCards = faceUpCards;\n  }\n\n  getCards(): Array<TrainCard> {\n    return this.faceUpCards;\n  }\n\n  //Whenever a a card is drawn, it is replaced with a new card in it's spot\n  drawCard(index: number, newCard: TrainCard): TrainCard {\n    let cardDrawn = this.faceUpCards[index];\n    this.faceUpCards[index] = newCard;\n    return cardDrawn;\n  }\n\n  //This is for use when all 5 cards need to be replaced at once\n  replaceDeck(newSet: Array<TrainCard>): Array<TrainCard> {\n    let oldSetofFive = this.faceUpCards\n    this.faceUpCards = newSet;\n    return oldSetofFive;\n  }\n\n\n  isThreeOrMoreWildCard(): boolean {\n    let numWild = 0;\n    for (let card of this.faceUpCards) {\n      if (card.color == \"wild\") {\n        numWild += 1;\n      }\n\n    }\n    if (numWild >= 3) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n","import { Player } from \"./Player\";\nimport { GameMap } from \"./GameMap\";\nimport { DestinationCard } from \"./DestinationCard\";\nimport { TrainCard } from \"./TrainCard\";\nimport { FaceUpCards } from \"./FaceUpCards\";\nimport { Route } from \"./Route\";\nimport { ChatRoom } from \"./ChatRoom\";\nimport { ChatMessage } from \"./ChatMessage\";\n\nexport class Game {\n    players: Array<Player>;\n    whoseTurn: number;\n    map: GameMap;\n    numDestinationCardsRemaining: number;\n    numTrainCardsRemaining: number;\n    faceUpCards: FaceUpCards;\n    chatRoom: ChatRoom;\n    potentialDestinationCards: Array<DestinationCard>;\n\n    constructor(players: Array<Player>, whoseTurn: number, map: GameMap, numDestinationCardsRemaining: number, numTrainCardsRemaining: number, faceUpCards: FaceUpCards, chatRoom: ChatRoom) {\n        this.players = players;\n        this.whoseTurn = whoseTurn;\n        this.map = map;\n        this.numDestinationCardsRemaining = numDestinationCardsRemaining;\n        this.numTrainCardsRemaining = numTrainCardsRemaining;\n        this.faceUpCards = faceUpCards;\n        this.chatRoom = chatRoom;\n    }\n\n    checkWinCondition(): Player {\n        let maxPoints = 0;\n        let winningPlayer = null;\n        this.players.forEach((player) => {\n            let score = player.getScore();\n            if (score > maxPoints) {\n                maxPoints = score;\n                winningPlayer = player;\n            }\n        });\n        return winningPlayer;\n    }\n\n    getChatHistory(): Array<ChatMessage> {\n        return this.chatRoom.getChatHistory();\n    }\n\n    setChatHistory(chats: Array<ChatMessage>) {\n        this.chatRoom.setChatHistory(chats);\n    }\n\n    getPlayerList(): Array<Player> {\n        return this.players;\n    }\n\n    getCurrentTurnIndex(): number {\n        return this.whoseTurn;\n    }\n\n    getMap(): GameMap {\n        return this.map;\n    }\n\n    getNumDestinationCardsRemaining(): number {\n        return this.numDestinationCardsRemaining;\n    }\n\n    getNumTrainCardsRemaining(): number {\n        return this.numTrainCardsRemaining;\n    }\n\n    getFaceUpCards(): FaceUpCards {\n        return this.faceUpCards;\n    }\n\n    claimRoute(player: Player, route: Route): void {\n        let username = player.getUsername;\n        this.players.forEach((player) => {\n            if (player.getUsername == username) {\n                player.claimRoute(route);\n                return;\n            }\n        });\n    }\n\n    useTrainCard(player: Player, trainCard: TrainCard,numUsed:number): void {\n        let username = player.getUsername;\n        this.players.forEach((player) => {\n            if (player.getUsername == username) {\n                player.useTrainCard(trainCard,numUsed);\n                return;\n            }\n        });\n    }\n\n    addTrainCard(player: Player, trainCard: TrainCard): void {\n        let username = player.getUsername;\n        this.players.forEach((player) => {\n            if (player.getUsername == username) {\n                player.drawTrainCard(trainCard);\n                return;\n            }\n        });\n    }\n\n    addDestinationCard(username: string, destinationCard: DestinationCard) {\n        this.players.forEach((thisPlayer) => {\n            if (thisPlayer.getUsername() == username) {\n                thisPlayer.drawDestinationCard(destinationCard);\n                return;\n            }\n        });\n\n    }\n\n    setFaceUpCards(faceUpCards: FaceUpCards): void {\n        this.faceUpCards = faceUpCards;\n    }\n\n    updatePlayerPoints(player: Player, points: number): void {\n        let username = player.getUsername;\n        this.players.forEach((player) => {\n            if (player.getUsername == username) {\n                player.setScore(points);\n                return;\n            }\n        });\n    }\n\n\n    updateNumTrainCars(player: Player, numUsed: number): void {\n        let username = player.getUsername;\n        this.players.forEach((player) => {\n            if (player.getUsername == username) {\n                player.setNumTrainCars(numUsed)\n                return;\n            }\n        });\n    }\n\n    setNumDestinationCardsRemaining( newNum: number): void {\n        this.numDestinationCardsRemaining = newNum;\n    }\n\n    setNumTrainCardsRemaining(newNum: number): void {\n        this.numTrainCardsRemaining = newNum;\n    }\n\n  setNumTrainCards(player:Player,numCards:number) {\n    let username = player.getUsername;\n    this.players.forEach((player) => {\n      if (player.getUsername == username) {\n        player.setNumTrainCars(numCards);\n        return;\n      }\n    });\n  }\n\n  setNumDestinationCards(player: Player, numCards: number) {\n    let username = player.getUsername;\n    this.players.forEach((player) => {\n      if (player.getUsername == username) {\n        player.setNumDestinationCards(numCards)\n        return;\n      }\n    });\n  }\n    presentDestinationCard(destinationCards: any[]){\n        this.potentialDestinationCards = destinationCards;\n    }\n    discardDestinationCard(){\n        this.potentialDestinationCards.length = 0;\n    }\n\n  changeTurn(player: Player): void {\n    let username = player.getUsername;\n    this.players.forEach((player) => {\n        if (player.getUsername == username) {\n            player.setTurn(true);\n        } else {\n            player.setTurn(false);\n        }\n    });\n  }\n}\n","import { LobbyGame } from \"./LobbyGame\"\n\nexport class GameList {\n    games: Array<LobbyGame>;\n\n    [key: string]: any;\n\n    constructor() {\n        this.games = new Array<LobbyGame>();\n    }\n\n    addGame(game: LobbyGame): void {\n        this.games.push(game);\n    }\n\n    removeGame(gameId: string): void {\n        for (var i = this.games.length - 1; i >= 0; --i) {\n            if (this.games[i].getGameID() == gameId) {\n                this.games.splice(i, 1);\n            }\n        }\n    }\n\n    findGameById(gameId: string): LobbyGame {\n        for (let i = 0; i < this.games.length; i++) {\n            if (this.games[i].getGameID() == gameId) {\n                return this.games[i];\n            }\n        }\n    }\n\n    replaceGameList(newGameList: Array<LobbyGame>): void {\n        this.games = newGameList;\n    }\n\n    getGames(): Array<LobbyGame> {\n        return this.games;\n    }\n\n}\n","import { Route } from \"./Route\";\n\nexport class GameMap {\n    routes: Array<Route>;\n\n    getRouteByIndex(index: number): Route {\n        return this.routes[index];\n    }\n}","import { IObserver } from \"../ViewModels/IObserver\";\nimport { Game } from \"./Game\";\nimport { Player } from \"./Player\";\nimport { Route } from \"./Route\";\nimport { TrainCard } from \"./TrainCard\";\nimport { DestinationCard } from \"./DestinationCard\";\nimport { GameMap } from \"./GameMap\";\nimport { FaceUpCards } from \"./FaceUpCards\";\nimport { Session } from \"./Session\";\nimport { ISubject } from \"./ISubject\"\nimport { ChatMessage } from \"./ChatMessage\";\nimport { ChatRoom } from \"./ChatRoom\";\n\n\nexport class IngameClientRoot implements ISubject {\n  observers: Array<IObserver>;\n  game: Game;\n  session: Session;\n\n  constructor() {\n    let players = new Array<Player>();\n    let whoseTurn = 0;\n    let map = new GameMap();\n    let numDestinationCardsRemaining = 1;\n    let numTrainCardsRemaining = 1;\n    let trainCards = Array<TrainCard>();\n    trainCards.push(new TrainCard(\"green\"));\n    trainCards.push(new TrainCard(\"blue\"));\n    trainCards.push(new TrainCard(\"black\"));\n    trainCards.push(new TrainCard(\"rainbow\"));\n    trainCards.push(new TrainCard(\"blue\"));\n    let faceUpCards = new FaceUpCards(trainCards);\n    let chatRoom = new ChatRoom(\"\", new Array<ChatMessage>());\n    this.game = new Game(players, whoseTurn, map, numDestinationCardsRemaining, numTrainCardsRemaining, faceUpCards, chatRoom);\n    this.observers = new Array<IObserver>();\n  }\n\n  transitionPage(pageName: string): void {\n    this.session.setCurrentPage(pageName);\n    this.notify(\"transitionPage\", pageName);\n  }\n\n  notify(updateType: string, data: any) {\n    for (const o of this.observers) {\n      if (o != null) {\n        o.update(updateType, data);\n      }\n    }\n  }\n\n  public attach(o: IObserver) {\n    this.observers.push(o);\n  }\n\n  public detach(o: IObserver) {\n\n  }\n\n  claimRoute(player: Player, route: Route): void {\n    this.game.claimRoute(player, route);\n  }\n\n /* useTrainCard(trainCard: TrainCard): void {\n    this.game.useTrainCard(trainCard);\n  }\n\n  addTrainCard(trainCard: TrainCard): void {\n    this.game.addTrainCard(trainCard);\n  }*/\n\n  addDestinationCard(username: string, destinationCard: DestinationCard) {\n    this.game.addDestinationCard(username,destinationCard);\n  }\n\n  checkWinCondition(): Player {\n    return this.game.checkWinCondition();\n  }\n\n  getPlayerList(): Array<Player> {\n    return this.game.getPlayerList();\n  }\n\n  getCurrentTurnIndex(): number {\n    return this.game.getCurrentTurnIndex();\n  }\n\n  getMap(): GameMap {\n    return this.game.getMap();\n  }\n\n  getFaceUpCards(): FaceUpCards {\n    return this.game.getFaceUpCards();\n  }\n\n  getNumTrainCardsRemaining() {\n    return this.game.getNumTrainCardsRemaining();\n  }\n\n  getNumDestinationCardsRemaining() {\n    return this.game.getNumDestinationCardsRemaining();\n  }\n\n  setFaceUpCards(faceUpCards: FaceUpCards): void {\n    this.game.setFaceUpCards(faceUpCards);\n    this.notify(\"setFaceUpCards\", faceUpCards);\n  }\n\n  updatePlayerPoints(player: Player, points: number): void {\n    this.game.updatePlayerPoints(player, points);\n  }\n\n  /*removeTrainCard(trainCard: TrainCard): void {\n    this.game.removeTrainCard(trainCard);\n  }*/\n\n  updateNumTrainCars(player: Player, numUsed: number): void {\n    this.game.updateNumTrainCars(player, numUsed);\n  }\n\n  updateNumberOfDestinationCards(player: Player, numCards: number): void {\n    this.game.setNumDestinationCards(player, numCards);\n  }\n\n  setNumTrainCards(player: Player, numCards: number) {\n    this.game.setNumTrainCards(player, numCards);\n  }\n\n  updateNumInDeck(newNum: number): void {\n    this.game.setNumTrainCardsRemaining(newNum);\n  }\n\n  changeTurn(player: Player): void {\n    this.game.changeTurn(player);\n  }\n\n  receiveChatCommand(gameid: string, chats: any[]){\n    this.game.setChatHistory(chats);\n  }\n  presentDestinationCard(destinationCards: any[]){\n    this.game.presentDestinationCard(destinationCards);\n  }\n\n  discardDestinationCard(){\n    this.game.discardDestinationCard();\n  }\n\n  removeTrainCard(trainCard){\n\n  }\n\n  addTrainCard(trainCard){\n\n  }\n\n\n}\n","import { Player } from \"./Player\"\n\nexport class LobbyGame {\n  gameID: string;\n  gamename: string;\n  playerList: Array<Player>;\n  maxPlayer: number;\n  currentPlayerNum: number;\n  host: Player;\n\n\n  constructor(gameID: string, host: Player, name: string, maxPlayers: number) {\n    this.gameID = gameID;\n    this.host = host;\n    this.gamename = name;\n    this.maxPlayer = maxPlayers;\n    this.playerList = new Array<Player>();\n  }\n\n  getPlayerList(): Array<Player> {\n    return this.playerList;\n  }\n\n  getGameID(): string {\n    return this.gameID;\n  }\n\n  getGameName(): string {\n    return this.gamename;\n  }\n\n  getMaxPlayers(): number {\n    return this.maxPlayer;\n  }\n\n  getNumPlayers(): number {\n    return this.playerList.length;\n  }\n\n  addPlayer(player: Player) {\n    //If this would push it over the max, throw an error\n    if (this.getNumPlayers() == this.maxPlayer) {\n      throw Error(\"You already have the maximum number of Players\");\n    }\n    this.playerList.push(player);\n  }\n\n  removePlayer(username: string) {\n    for (var i = this.playerList.length - 1; i >= 0; --i) {\n      if (this.playerList[i].getUsername() == username) {\n        this.playerList.splice(i, 1);\n      }\n    }\n  }\n}\n","import { PlayerHand } from \"./PlayerHand\";\nimport { Route } from \"./Route\";\nimport { TrainCard } from \"./TrainCard\";\nimport { DestinationCard } from \"./DestinationCard\";\n\nexport class Player {\n  username: string;\n    myHand: PlayerHand;\n    trainCars: number;\n    color: string;\n    score: number;\n    connectedCities: Array<Array<string>>;\n    ownedRoutes: Array<Route>;\n    myTurn: boolean;\n    numTrainCards: number;\n    numDestinationCards: number;\n    isOtherPlayer: boolean;\n\n\n  constructor(username: string) {\n    this.username = username;\n  }\n  \n  getUsername(): string {\n    return this.username;\n    }\n\n    //Acts as a constructor for when actual gameplay starts\n    initiateGame(myHand:PlayerHand,trainCards:number,color:string,numTrainCards:number,numDestinationCards:number,isOtherPlayer:boolean) {\n        this.myHand = myHand;\n        this.trainCars = trainCards;\n        this.color = color;\n        this.numTrainCards = numTrainCards;\n        this.numDestinationCards = numDestinationCards;\n        this.isOtherPlayer = isOtherPlayer;\n        this.connectedCities = new Array<Array<string>>();\n        this.ownedRoutes = new Array<Route>();\n        this.myTurn = false;\n    }\n\n    claimRoute(route: Route): void {\n        this.ownedRoutes.push(route);\n        let length = route.getLength();\n        if (length == 1) {\n            this.score += 1;\n        }\n        else if (length == 2) {\n            this.score += 2;\n        } else if (length == 3) {\n            this.score += 4;\n        } else if (length == 4) {\n            this.score += 7;\n        } else if (length == 5) {\n            this.score += 10;\n        } else if (length == 6) {\n            this.score += 15;\n        }\n    }\n\n    drawTrainCard(trainCard: TrainCard):void {\n        this.myHand.addTrainCard(trainCard);\n    }\n\n    drawDestinationCard(destinationCard: DestinationCard):void {\n        this.myHand.addDestinationCard(destinationCard);\n    }\n\n    getScore(): number {\n        return this.score;\n    }\n\n    setScore(newScore: number) {\n        this.score = newScore;\n    }\n\n    useTrainCard(trainCard: TrainCard,numUsed:number) {\n        \n    }\n\n    setNumTrainCars(numCars: number) {\n        this.trainCars -= numCars;\n    }\n\n    setTurn(isMyTurn: boolean) {\n        this.myTurn = isMyTurn;\n    }\n\n  setNumTrainCards(numCards:number){\n    this.numTrainCards = numCards;\n    }\n\n  setNumDestinationCards(numCards:number){\n    this.numDestinationCards = numCards\n    }\n\n}\n","import {Player} from \"./Player\"\n\nexport class Session {\n  // authToken: string;\n  currentPage: string;\n  loggedInUser: Player;\n\n  constructor() {\n    //this.authToken = auth;\n    this.currentPage = \"Login\";\n    this.loggedInUser = null;\n  }\n\n  /* get getAuth(): string {\n        return this.authToken;\n    }\n\n    set setAuth(auth: string) {\n        this.authToken = auth;\n    }\n   */\n  get getCurrentPage(): string {\n    return this.currentPage;\n  }\n\n  setCurrentPage(page: string) {\n    this.currentPage = page;\n  }\n\n  get getLoggedInUser(): Player {\n    return this.loggedInUser;\n  }\n\n  setLoggedInUser(player: Player) {\n    this.loggedInUser = player;\n  }\n\n}\n","export class TrainCard {\n  color: string;\n  constructor(color: string) {\n    this.color = color;\n  }\n\n  getColor(): string{\n    return this.color;\n  }\n}\n","export class ClientCommandObjects {\n  _className: string;\n  _methodName: string;\n  _paramTypes: any[];\n  _paramValues: any[];\n  constructor(classNameIn: string, methodNameIn: string, paramTypesIn: any[], paramValuesIn: any[]) {\n    this._className = classNameIn;\n    this._methodName = methodNameIn;\n    this._paramTypes = paramTypesIn;\n    this._paramValues = paramValuesIn;\n  }\n}\n","import { ClientCommandObjects } from \"./ClientCommandObjects\";\nimport { Serializer } from \"./Serializer\";\nimport { ExternalClientFacade } from \"../Services/ExternalClientFacade\";\nimport { GameList } from \"../Models/GameList\";\nimport { Player } from \"../Models/Player\";\nimport { LobbyGame } from \"../Models/LobbyGame\";\nimport { IngameExternalClientFacade } from \"../Services/IngameExternalClientFacade\";\n\nexport class ClientCommunicator {\n  serverUrl: string;\n  serverPort: string;\n  serializer: Serializer;\n  clientFacade: ExternalClientFacade;\n  inGameClientFacade: IngameExternalClientFacade;\n\n  constructor(public serverUrlIn: string, public serverPortIn: string, public serialIn: Serializer, public facadeIn: ExternalClientFacade, public inGameECFIn: IngameExternalClientFacade) {\n    this.serverUrl = serverUrlIn;\n    this.serverPort = serverPortIn;\n    this.serializer = serialIn;\n    this.clientFacade = facadeIn;\n    this.inGameClientFacade = inGameECFIn;\n  }\n  public sendCommand(command: ClientCommandObjects){\n    var data = this.serializer.toJSON(command);\n    var request = new XMLHttpRequest();\n    request.open('POST', \"/command\", true);\n    request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');\n    let that = this;\n    let serial = this.serializer;\n    request.onload = function() {\n      if (request.status >= 200 && request.status < 400) {\n        // Success!\n        var result = serial.parseJSON(request.responseText);\n        that.executeCommands(result);\n      } else {\n        // We reached our target server, but it returned an error\n\n      }\n    };\n\n    request.onerror = function() {\n      // There was a connection error of some sort\n    };\n    request.send(data);\n  }\n\n  public executeCommands(commands: ClientCommandObjects[]){\n    for (var i = 0; i < commands.length; i++){\n      if (commands[i]._methodName == \"loginStatus\"){\n        this.clientFacade.loginResults(commands[i]._paramValues[0], commands[i]._paramValues[1]);\n      }\n      else if (commands[i]._methodName == \"registerStatus\"){\n        this.clientFacade.registerResults(commands[i]._paramValues[0], commands[i]._paramValues[1]);\n      }\n      else if (commands[i]._methodName == \"updateGameList\"){\n        const games = commands[i]._paramValues[2];\n        const gameList = new GameList();\n        for (let i = 0; i < games.length; i++) {\n          const gameID = games[i].gameID;\n          const name = games[i].gamename;\n          const host = new Player(games[i].host);\n          const maxPlayers = games[i].maxPlayer;\n          const game = new LobbyGame(gameID, host, name, maxPlayers);\n\n          const players = games[i].playerList.playerList;\n          for (let j = 0; j < players.length; j++) {\n            const player = new Player(players[j].username);\n            game.addPlayer(player);\n          }\n          gameList.addGame(game);\n        }\n        this.clientFacade.updateGameList(commands[i]._paramValues[0], gameList, commands[i]._paramValues[1]);\n      }\n      else if (commands[i]._methodName == \"joinGame\"){\n        this.clientFacade.joinGame(commands[i]._paramValues[2]);\n      }\n      else if (commands[i]._methodName == \"startGame\"){\n        this.clientFacade.startGame(commands[i]._paramValues[2]);\n      }\n      else if (commands[i]._methodName == \"receiveChatCommand\"){\n        this.inGameClientFacade.receiveChatCommand(commands[i]._paramValues[0], commands[i]._paramValues[1], commands[i]._paramValues[2], commands[i]._paramValues[3]);\n      }\n      else if (commands[i]._methodName == \"potentialDestinationCard\"){\n        this.inGameClientFacade.presentDestinationCard(commands[i]._paramValues[0], commands[i]._paramValues[1], commands[i]._paramValues[4]);\n      }\n      else if (commands[i]._methodName == \"discardDestinationCard\"){\n        this.inGameClientFacade.discardDestinationCard(commands[i]._paramValues[0], commands[i]._paramValues[1], commands[i]._paramValues[4]);\n      }\n      else if (commands[i]._methodName == \"drawDestinationCard\"){\n        this.inGameClientFacade.addDestinationCard(commands[i]._paramValues[0], commands[i]._paramValues[1], commands[i]._paramValues[3], commands[i]._paramValues[4]);\n      }\n    }\n  }\n}\n","import { ClientCommunicator } from \"./ClientCommunicator\";\nimport { DestinationCard } from \"../Models/DestinationCard\";\nimport { ClientCommandObjects } from \"./ClientCommandObjects\";\n\n//This sends commands to the Server\nexport class IngameServerProxy {\n    host: string;\n    port: string;\n    serverClass : string = \"server.ServerFacade\";\n    gameClass : string = \"server.GameFacade\";\n    paramTypeString : string = \"java.lang.String\";\n    paramTypeInteger : string = \"java.lang.Integer\";\n    paramTypeDouble : string = \"java.lang.Double\";\n    paramTypeList : string = \"java.util.List\";\n    paramTypeDate : string = \"java.util.Date\";\n\n    communicator: ClientCommunicator\n\n    DrawDestinationCard(gameId:String, username:String) {\n        const command = new ClientCommandObjects(this.gameClass, \"drawDestinatGameFacadeionCard\", [this.paramTypeString, this.paramTypeString], [gameId, username]);\n        this.communicator.sendCommand(command);\n    }\n\n    SendChat(message: String, time: Date,username:String, gameId: String) {\n        const command = new ClientCommandObjects(this.serverClass, \"sendChat\", [this.paramTypeString, this.paramTypeDate, this.paramTypeString, this.paramTypeString], [message,time,username,gameId]);\n        this.communicator.sendCommand(command);\n    }\n\n    /**\n     *\n     * @param gameId\n     * @param username\n     * @param destinationCards\n     * @return gameID, username,\n     */\n    DiscardDestinationCard(gameId:String, username:String, destinationCards: Array<DestinationCard>) {\n        const command = new ClientCommandObjects(this.gameClass, \"discardDestinationCard\", [this.paramTypeString, this.paramTypeList], [gameId, username, destinationCards]);\n        this.communicator.sendCommand(command);\n    }\n\n    /**\n     *\n     * @param gameId\n     * @param username\n     * @return retrieves upto three cards from the server\n     */\n    PotentialDestinationCard(gameId:String, username:String)\n    {\n        const command = new ClientCommandObjects(this.gameClass, \"potentialDestinationCard\", [this.paramTypeString], [gameId, username]);\n        this.communicator.sendCommand(command);\n    }\n}","import { InternalClientFacade } from \"../Services/InternalClientFacade\";\n\nexport class Poller {\n  method: string;\n  args: any[];\n  frequency: number;\n  facade: InternalClientFacade;\n  polling: any;\n\n  constructor(methodIn: string, argsIn: any[], frequencyIn: number, facadeIn: InternalClientFacade) {\n    this.method = methodIn;\n    this.args = argsIn;\n    this.frequency = frequencyIn;\n    this.facade = facadeIn;\n    this.polling = null;\n  }\n\n  public start() {\n    if (this.method == \"getGameList\"){\n      let that = this;\n      //this.polling = setInterval(that.facade.getGameList, that.frequency);\n      this.polling = setInterval(() => { that.facade.getGameList() }, that.frequency);\n    }\n  }\n\n  public stop() {\n    clearInterval(this.polling);\n  }\n}\n","import { ClientCommandObjects } from \"./ClientCommandObjects\";\nimport { GameList } from \"../Models/GameList\";\n\nexport class Serializer {\n  constructor() {\n  }\n  public toJSON(command: ClientCommandObjects){\n    const myCommand = JSON.stringify([command]);\n    return myCommand;\n  }\n  public parseJSON(command: string){\n    const myCommand: ClientCommandObjects[] = JSON.parse(command);\n    return myCommand;\n  }\n  public parseJSONGames(games: string){\n    const gameList: GameList = JSON.parse(games);\n    return gameList;\n  }\n}\n","import { ClientCommandObjects } from \"./ClientCommandObjects\";\nimport { ClientCommunicator } from \"./ClientCommunicator\";\n//import { Serializer } from \"./serializer\";\n\nexport class ServerProxy {\n  host: string;\n  port: string;\n  communicator: ClientCommunicator;\n  constructor(public commIn: ClientCommunicator) {\n    this.communicator = commIn;\n  }\n  public register(username:string, password:string, confirm:string){\n    const command = new ClientCommandObjects(\"server.ServerFacade\", \"register\", [\"java.lang.String\", \"java.lang.String\"], [username, password]);\n    this.communicator.sendCommand(command);\n  }\n  public login(username: string, password: string){\n    const command = new ClientCommandObjects(\"server.ServerFacade\", \"login\", [\"java.lang.String\", \"java.lang.String\"], [username, password]);\n    this.communicator.sendCommand(command);\n  }\n  public createGame(username: string, numPlayers: number, gameName: string){\n    const command = new ClientCommandObjects(\"server.ServerFacade\", \"createGame\", [\"java.lang.String\", \"java.lang.String\", \"java.lang.String\"], [username, gameName, String(numPlayers)]);\n    this.communicator.sendCommand(command);\n  }\n  public joinGame(username: string, gameName: string, gameId: string){\n    const command = new ClientCommandObjects(\"server.ServerFacade\", \"joinGame\", [\"java.lang.String\", \"java.lang.String\"], [username, gameId]);\n    this.communicator.sendCommand(command);\n  }\n  public startGame(gameId: string){\n    const command = new ClientCommandObjects(\"server.ServerFacade\", \"startGame\", [\"java.lang.String\"], [gameId]);\n    this.communicator.sendCommand(command);\n  }\n  public getGameList(){\n    const command = new ClientCommandObjects(\"server.ServerFacade\", \"getGameList\", [], []);\n    this.communicator.sendCommand(command);\n  }\n\n  public drawDestinationCard(destinationCards: any[]){\n    const command = new ClientCommandObjects(\"server.GameFacade\", \"drawDestinationCard\", [[]], [destinationCards]);\n    this.communicator.sendCommand(command);\n  }\n\n  public discardDestinationCard(destinationCards: any[], gameID: String){\n    const command = new ClientCommandObjects(\"server.GameFacade\", \"discardDestinationCard\", [\"java.lang.String\",[]], [gameID, destinationCards]);\n    this.communicator.sendCommand(command);\n  }\n\n  public sendChat(message: String, time: Date, username: String, gameID: String){\n    const command = new ClientCommandObjects(\"server.ServerFacade\", \"sendChat\", [\"java.lang.String\", \"java.lang.Date\", \"java.lang.String\"], [message, time, username, gameID]);\n    this.communicator.sendCommand(command);\n  }\n}\n","import { ClientRoot } from \"../Models/ClientRoot\";\nimport { LobbyGame } from \"../Models/LobbyGame\";\nimport { GameList } from \"../Models/GameList\";\n\nexport class ExternalClientFacade {\n  root: ClientRoot;\n\n  constructor(root: ClientRoot) {\n    this.root = root;\n  }\n  loginResults(wasSuccessful: boolean, errorMessage: string) {\n    this.root.loginResults(wasSuccessful, errorMessage);\n  }\n\n  registerResults(wasSuccessful: boolean, errorMessage: string) {\n    this.root.registerResults(wasSuccessful, errorMessage);\n  }\n\n  updateGameList(wasSuccessful: boolean, games: GameList, errorMessage: string) {\n    this.root.updateGameList(wasSuccessful, games, errorMessage);\n  }\n\n  transitionPage(pageName: string) {\n    this.root.transitionPage(pageName);\n  }\n\n  getGameList(): Array<LobbyGame> {\n    let gameList = this.root.getGameList();\n    return gameList;\n  }\n\n  joinGame(gameId: string) {\n    this.root.joinGame(gameId);\n  }\n\n  startGame(gameId:string){\n    this.root.startGame(gameId);\n  }\n\n}\n","import { IngameClientRoot } from \"../Models/IngameClientRoot\";\nimport { Player } from \"../Models/Player\";\nimport { DestinationCard } from \"../Models/DestinationCard\";\nimport { Route } from \"../Models/Route\";\nimport { TrainCard } from \"../Models/TrainCard\";\nimport { FaceUpCards } from \"../Models/FaceUpCards\";\n\nexport class IngameExternalClientFacade {\n  root: IngameClientRoot\n  claimRoute(player:Player, route:Route) {\n    this.root.claimRoute(player, route);\n  }\n\n  /*addTrainCard(trainCard:TrainCard) {\n    this.root.addTrainCard(trainCard);\n  }*/\n\n  updatePlayerPoints(player: Player, points:number) {\n    this.root.updatePlayerPoints(player, points);\n  }\n\n  /*removeTrainCard(trainCard:TrainCard) {\n    this.root.removeTrainCard(trainCard);\n  }*/\n\n  updateNumTrainCards(player:Player,numUsed:number) {\n    this.root.updateNumTrainCars(player,numUsed)\n  }\n\n  updateNumTrainCars(player:Player,numCars:number) {\n    this.root.updateNumTrainCars(player,numCars)\n  }\n\n  updateNumberOfDestinationCards(player:Player,numCards:number) {\n    this.root.updateNumberOfDestinationCards(player,numCards)\n  }\n\n  setFaceUpCards(faceUpCards:FaceUpCards) {\n    this.root.setFaceUpCards(faceUpCards);\n  }\n\n  updateNumInDeck(newNum:number) {\n    this.root.updateNumInDeck(newNum)\n  }\n\n  updateNumDestinationCards(player:Player,numCards:number) {\n    this.root.updateNumberOfDestinationCards(player, numCards);\n  }\n\n  changeTurn(player:Player) {\n    this.root.changeTurn(player)\n  }\n\n    receiveChatCommand(success: boolean, errorMessage: string, gameid: string, chats: any[]){\n        //test if it was a success, and if there was an error message\n        this.root.receiveChatCommand(gameid, chats);\n    }\n\n    presentDestinationCard(success: boolean, errorMessage: string, destinationCards: any[]){\n        //test if it was a success, and if there was an error message\n        this.root.presentDestinationCard(destinationCards);\n    }\n    discardDestinationCard(success: boolean, errorMessage: string, destinationCards: any[]){\n        //test if it was a success, and if there was an error message\n        this.root.discardDestinationCard();\n    }\n    addDestinationCard(success: boolean, errorMessage: string, username: string, destinationCards: any[]){\n        //test if it was a success, and if there was an error message\n        for (var i = 0; i < destinationCards.length; i++){\n            this.root.addDestinationCard(username, destinationCards[i]);\n        }\n    }\n\n}\n","import { IngameServerProxy } from \"../Server/IngameServerProxy\";\nimport { IngameClientRoot } from \"../Models/IngameClientRoot\";\nimport { FaceUpCards } from \"../Models/FaceUpCards\";\n\nexport class IngameInternalClientFacade {\n  proxy: IngameServerProxy;\n  root: IngameClientRoot;\n\n  constructor(_proxy: IngameServerProxy, _root: IngameClientRoot) {\n    this.proxy = _proxy;\n    this.root = _root;\n  }\n\n  PresentDestinationCard() {\n\n  }\n\n  NotifyStartGame() {\n\n  }\n\n  RecieveChatCommand() {\n\n  }\n\n  DiscardDestinationCard() {\n\n  }\n\n  getFaceUpCards(): FaceUpCards {\n    return this.root.getFaceUpCards();\n  }\n\n  getNumTrainCardsRemaining() {\n    return this.root.getNumTrainCardsRemaining();\n  }\n\n  getNumDestinationCardsRemaining() {\n    return this.root.getNumDestinationCardsRemaining();\n  }\n\n}\n","import { ServerProxy } from \"../Server/ServerProxy\";\nimport { ClientRoot } from \"../Models/ClientRoot\";\n\nexport class InternalClientFacade {\n  proxy: ServerProxy;\n  root: ClientRoot;\n\n  constructor(proxy:ServerProxy,root:ClientRoot) {\n    this.proxy = proxy;\n    this.root = root;\n  }\n\n  login(username: string, password: string) {\n    this.proxy.login(username, password);\n  }\n\n  register(username: string, password: string) {\n    this.proxy.register(username, password, \"YES\");\n  }\n\n  createGame(numPlayers: number, gameName: string) {\n    const me = this.root.getCurrentUser();\n    this.proxy.createGame(me, numPlayers, gameName);\n  }\n\n  getGameList(){\n    this.proxy.getGameList();\n  }\n\n  getPlayerList(gameId: string) {\n    return this.root.getPlayerList(gameId);\n  }\n\n  getCurrentGameId(): string {\n    return this.root.getGameIdForUsername(this.root.getCurrentUser());\n  }\n\n  joinGame(gameName: string, gameId: string) {\n    const me = this.root.getCurrentUser();\n    this.proxy.joinGame(me, gameName, gameId);\n  }\n\n  startGame(gameId:string){\n    this.proxy.startGame(gameId);\n  }\n\n}\n","import * as React from \"react\";\nimport { GameListView } from \"../Views/GameListView\";\nimport { initialState, State, IGameListViewModel } from \"./IGameListViewModel\";\nimport { IObserver } from \"./IObserver\";\nimport { ViewModelProps } from \"./ViewModelProps\";\nimport { Poller } from \"../Server/Poller\";\n\nexport class GameListViewModel extends React.Component<ViewModelProps, State> implements IGameListViewModel, IObserver {\n\n  state: State;\n  poller: Poller;\n\n  constructor(props: ViewModelProps) {\n    super(props);\n    this.state = initialState;\n    this.props.services.getGameList();\n    this.poller = new Poller(\"getGameList\", [], 2000, this.props.services);\n    this.poller.start();\n  }\n\n  componentWillUnmount(){\n    this.poller.stop();\n  }\n\n  update = (updateType: string, data: any) => {\n    if (updateType == \"transitionPage\") {\n      this.props.main.setState({\"page\": data});      \n    } else if (updateType == \"updateGameList\") {\n      this.setState({\"gameList\": data});\n    } else if (updateType == \"error\") {\n      this.setState({\"errorMessage\": data});\n    }\n  }\n\n  createGameButtonPressed = (e: any) => {\n    e.preventDefault();\n    this.props.services.createGame(this.state.createGameNumPlayers, this.state.createGameName);\n  }\n\n  joinGameButtonPressed = (e: any) => {\n    e.preventDefault();\n    console.log(this.state);\n    const gameName: string = String(this.state.gameList.games[this.state.selectedGame].gamename);\n    const gameId: string = String(this.state.gameList.games[this.state.selectedGame].gameID);\n    this.props.services.joinGame(gameName, gameId);\n  }\n\n  tableRowPressed = (index: number) => {\n    this.setState({selectedGame: index});\n  }\n\n  onCreateGameNameChange = (e: any) => {\n    this.setState({createGameName: e.target.value});\n  }\n\n  onCreateGameNumPlayersChange = (e: any) => {\n    this.setState({createGameNumPlayers: e.target.value});\n  }\n\n\n  isJoinGameButtonDisabled = () => {\n    return this.state.selectedGame != -1;\n  }\n\n  render(): JSX.Element {\n    return GameListView(this);\n  }\n}\n","import * as React from \"react\";\nimport { GameLobbyView } from \"../Views/GameLobbyView\";\nimport { initialState, State, IGameLobbyViewModel } from \"./IGameLobbyViewModel\";\nimport { IObserver } from \"./IObserver\";\nimport { ViewModelProps } from \"./ViewModelProps\";\nimport { Poller } from \"../Server/Poller\";\n\nexport class GameLobbyViewModel extends React.Component<ViewModelProps, State> implements IGameLobbyViewModel, IObserver {\n\n  state: State = initialState;\n  poller: Poller;\n  gameId: string;\n\n  constructor(props: ViewModelProps) {\n    super(props);\n    this.gameId = this.props.services.getCurrentGameId();\n    this.state = {\n      playerList: this.props.services.getPlayerList(this.gameId)\n    };\n    this.props.services.getGameList();\n    this.poller = new Poller(\"getGameList\", [], 2000, this.props.services);\n    this.poller.start();\n  }\n\n  update = (updateType: string, data: any) => {\n    if (updateType == \"transitionPage\") {\n      this.props.main.setState({\"page\": data});      \n    } else if (updateType == \"updateGameList\") {\n      this.setState({\"playerList\": this.props.services.getPlayerList(this.gameId)});\n    }\n  }\n\n  startGameButtonPressed = (e: any) => {\n    e.preventDefault();\n    alert(\"starting game...\");\n  }\n\n  render(): JSX.Element {\n    return GameLobbyView(this);\n  }\n}\n","import { GameList } from \"../Models/GameList\";\n\nconst initialGameList: GameList = new GameList();\n\nexport const initialState = {\n  gameList: initialGameList,\n  selectedGame: -1,\n  createGameName: \"\",\n  createGameNumPlayers: 0,\n  errorMessage: \"\"\n};\n\nexport type State = Readonly<typeof initialState>;\n\nexport interface IGameListViewModel {\n  state: State;\n  createGameButtonPressed(e: any): void;\n  joinGameButtonPressed(e: any): void;\n  tableRowPressed(index: number): void;\n  onCreateGameNameChange(e: any): void;\n  onCreateGameNumPlayersChange(e: any): void;\n  isJoinGameButtonDisabled(): boolean;\n}\n","import { Player } from \"../Models/Player\";\n\nconst initialPlayerList: Array<Player> = [];\n\nexport const initialState = {\n  playerList: initialPlayerList\n};\n\nexport type State = Readonly<typeof initialState>;\n\nexport interface IGameLobbyViewModel {\n  state: State;\n  startGameButtonPressed(e: any): void;\n}\n","export const initialState = {\n  loginUserName: \"\",\n  loginPassword: \"\",\n  registerUserName: \"\",\n  registerPassword: \"\",\n  registerConfirmPassword: \"\",\n  errorMessage: \"\"\n};\n\nexport type State = Readonly<typeof initialState>;\n\nexport interface ILoginRegisterViewModel {\n  state: State;\n  onLoginButtonPressed(e: any): void;\n  onRegisterButtonPressed(e: any): void;\n  onLoginUserNameChange(e: any): void;\n  onLoginPasswordChange(e: any): void;\n  onRegisterUserNameChange(e: any): void;\n  onRegisterPasswordChange(e: any): void;\n  onRegisterConfirmPasswordChange(e: any): void;\n}\n","import * as React from \"react\";\nimport { LoginRegisterView } from \"../Views/LoginRegisterView\";\nimport { initialState, State, ILoginRegisterViewModel } from \"./ILoginRegisterViewModel\";\nimport { IObserver } from \"./IObserver\";\nimport { ViewModelProps } from \"./ViewModelProps\";\n\nexport class LoginRegisterViewModel extends React.Component<ViewModelProps, State> implements ILoginRegisterViewModel, IObserver {\n\n  state: State = initialState;\n\n  update = (updateType: string, data: any) => {\n    if (updateType == \"transitionPage\") {\n      this.props.main.setState({\"page\": data});      \n    } else if (updateType == \"error\") {\n      this.setState({\"errorMessage\": data});\n    }\n  }\n\n  onLoginButtonPressed = (e: any) => {\n    e.preventDefault();\n    this.props.services.login(this.state.loginUserName, this.state.loginPassword);\n  }\n\n  onRegisterButtonPressed = (e: any) => {\n    e.preventDefault();\n    this.props.services.register(this.state.registerUserName, this.state.registerPassword);\n  }\n\n  onLoginUserNameChange = (e: any) => {\n    this.setState({\"loginUserName\": e.target.value});\n  }\n\n  onLoginPasswordChange = (e: any) => {\n    this.setState({\"loginPassword\": e.target.value});\n  }\n\n  onRegisterUserNameChange = (e: any) => {\n    this.setState({\"registerUserName\": e.target.value});\n  }\n\n  onRegisterPasswordChange = (e: any) => {\n    this.setState({\"registerPassword\": e.target.value});\n  }\n\n  onRegisterConfirmPasswordChange = (e: any) => {\n    this.setState({\"registerConfirmPassword\": e.target.value});\n  }\n\n  render(): JSX.Element {\n    return LoginRegisterView(this);\n  }\n}\n","import * as React from \"react\";\nimport * as I from \"../ViewModels/IGameListViewModel\";\n\nexport const GameListView = (component: I.IGameListViewModel) => {\n  const rows = [];\n  const gameList = component.state.gameList.getGames();\n  for (let i = 0; i < gameList.length; i++) {\n    rows.push(\n      <tr onClick={() => component.tableRowPressed(i)} className={component.state.selectedGame == i ? \"active\" : \"\"} key={i}>\n        <td>{gameList[i].getGameID()}</td>\n        <td>{gameList[i].getGameName()}</td>\n        <td>{gameList[i].getMaxPlayers()}</td>\n        <td>{gameList[i].getNumPlayers()}/{gameList[i].maxPlayer}</td>\n      </tr>\n    );\n  }\n  return (\n    <div className=\"view\">\n      <p>{component.state.errorMessage}</p>\n      <div className=\"half-partition\">\n        <table>\n          <tbody>\n            <tr>\n              <th>#</th>\n              <th>Name</th>\n              <th>Players</th>\n              <th>In-Game</th>\n            </tr>\n            {rows}\n          </tbody>\n        </table>\n        <p>\n          <button onClick={component.joinGameButtonPressed} disabled={component.state.selectedGame == -1}>Join Game</button>\n        </p>\n      </div>\n      <div className=\"half-partition\">\n        <form onSubmit={component.createGameButtonPressed}>\n          <p>\n            <label>Name:<br />\n              <input type=\"text\" value={component.state.createGameName} onChange={component.onCreateGameNameChange}/>\n            </label>\n          </p>\n          <p>\n            <label>Number of players:<br />\n              <input type=\"text\" value={component.state.createGameNumPlayers} onChange={component.onCreateGameNumPlayersChange}/>\n            </label>\n          </p>\n          <input type=\"submit\" value=\"Create Game\" className=\"wide-button\" />\n        </form>\n      </div>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport * as I from \"../ViewModels/IGameLobbyViewModel\";\n\nexport const GameLobbyView  = (component: I.IGameLobbyViewModel) => {\n  const players = [];\n  const playerList = component.state.playerList;\n  for (let i = 0; i < playerList.length; i++) {\n    players.push(\n      <li key={i}>{playerList[i].username}</li>\n    );\n  }\n  return (\n    <div className=\"view\">\n      <div className=\"half-partition\">\n        <p><b><u>Players</u></b></p>\n        <ul>\n          {players}\n        </ul>\n        <p><button onClick={component.startGameButtonPressed} disabled={playerList.length < 2}>Start Game</button></p>\n      </div>\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport * as I from \"../ViewModels/ILoginRegisterViewModel\";\n\nexport const LoginRegisterView = (component: I.ILoginRegisterViewModel) => {\n    return (\n      <div className=\"view\">\n        <p>{component.state.errorMessage}</p>\n        <div className=\"half-partition\">\n          <h1>Login</h1>\n          <form onSubmit={component.onLoginButtonPressed}>\n            <p>\n              <label>User Name:<br />\n                <input type=\"text\" name=\"login-username\" value={component.state.loginUserName} onChange={component.onLoginUserNameChange} />\n              </label> \n            </p>\n            <p>\n              <label>Password:<br />\n                <input type=\"text\" name=\"login-password\" value={component.state.loginPassword} onChange={component.onLoginPasswordChange}/>\n              </label>\n            </p>\n            <p><input type=\"submit\" value=\"Log in\" /></p>\n          </form>\n        </div>\n        <div className=\"half-partition\">\n          <h1>Register</h1>\n          <form onSubmit={component.onRegisterButtonPressed}>\n            <p>\n              <label>User Name:<br />\n                <input type=\"text\" name=\"register-username\" value={component.state.registerUserName} onChange={component.onRegisterUserNameChange}/>\n              </label>\n            </p>\n            <p>\n              <label>Password:<br />\n                <input type=\"text\" name=\"register-password\" value={component.state.registerPassword} onChange={component.onRegisterPasswordChange}/>\n              </label>\n            </p>\n            <p>\n              <label>Confirm password:<br />\n                <input type=\"text\" name=\"register-confirm-password\" value={component.state.registerConfirmPassword} onChange={component.onRegisterConfirmPasswordChange}/>\n              </label>\n            </p>\n            <input type=\"submit\" value=\"Register\" />\n          </form>\n        </div>\n      </div>\n    );\n}\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport { LoginRegisterViewModel } from './ViewModels/LoginRegisterViewModel';\nimport { GameListViewModel } from './ViewModels/GameListViewModel';\nimport { GameLobbyViewModel } from './ViewModels/GameLobbyViewModel';\nimport { MapViewModel } from './ViewModels/MapViewModel';\nimport { DestinationCardSelectionViewModel } from './ViewModels/DestinationCardSelectionViewModel';\nimport { FaceUpCardsViewModel } from './ViewModels/FaceUpCardsViewModel';\nimport { PlayerHandViewModel } from './ViewModels/PlayerHandViewModel';\nimport { PlayerInfoViewModel } from './ViewModels/PlayerInfoViewModel';\nimport { GameViewModel } from \"./ViewModels/GameViewModel\";\n\nimport { ClientCommunicator } from './Server/ClientCommunicator';\nimport { Serializer } from './Server/Serializer';\nimport { ExternalClientFacade } from './Services/ExternalClientFacade';\n\nimport { ClientRoot } from './Models/ClientRoot';\nimport { InternalClientFacade } from './Services/InternalClientFacade';\nimport { ServerProxy } from './Server/ServerProxy';\n\nimport { IngameClientRoot } from './Models/IngameClientRoot';\nimport { IngameInternalClientFacade } from './Services/IngameInternalClientFacade';\nimport { IngameExternalClientFacade } from './Services/IngameExternalClientFacade';\nimport { IngameServerProxy } from './Server/IngameServerProxy';\n\n\nexport const initialState = {\n<<<<<<< HEAD\n  \"page\": \"game\"\n=======\n  \"page\": \"faceup\"\n>>>>>>> e35686a4102a6374363157f62d0c26f6a2d28682\n};\n\nexport type State = Readonly<typeof initialState>;\n\nclass MainComponent extends React.Component<any, any> {\n\n  state: State = initialState;\n\n  loginRegisterViewModel: JSX.Element = <LoginRegisterViewModel ref={(instance) => this.props.root.attach(instance)} main={this} services={this.props.services} />;\n  gameListViewModel: JSX.Element = <GameListViewModel ref={(instance: any) => this.props.root.attach(instance)} main={this} services={this.props.services} />;\n  gameLobbyViewModel: JSX.Element = <GameLobbyViewModel ref={(instance: any) => this.props.root.attach(instance)} main={this} services={this.props.services} />;\n<<<<<<< HEAD\n  gameViewModel: JSX.Element = <GameViewModel ref={(instance: any) => this.props.root.attach(instance)} main={this} services={this.props.ingameServices} />;\n\n=======\n  mapViewModel: JSX.Element = <MapViewModel ref={(instance: any) => this.props.root.attach(instance)} main={this} services={this.props.services} />;\n  destinationCardSelectionViewModel: JSX.Element = <DestinationCardSelectionViewModel ref={(instance: any) => this.props.root.attach(instance)} main={this} services={this.props.services} />;\n  faceUpCardsViewModel: JSX.Element = <FaceUpCardsViewModel ref={(instance: any) => this.props.ingameRoot.attach(instance)} main={this} services={this.props.ingameServices} />;\n  playerHandViewModel: JSX.Element = <PlayerHandViewModel ref={(instance: any) => this.props.root.attach(instance)} main={this} services={this.props.ingameServices} />;\n  playerInfoViewModel: JSX.Element = <PlayerInfoViewModel ref={(instance: any) => this.props.root.attach(instance)} main={this} services={this.props.ingameServices} />;\n>>>>>>> e35686a4102a6374363157f62d0c26f6a2d28682\n\n  render(): JSX.Element {\n    if (this.state.page == \"loginRegister\") {\n      return this.loginRegisterViewModel;\n    } else if (this.state.page == \"game\") {\n      return this.gameViewModel;\n    } else if (this.state.page == \"gameList\") {\n      return this.gameListViewModel;\n    } else if (this.state.page == \"lobbyGame\") {\n      return this.gameLobbyViewModel;\n    } else {\n      return <p>Page {this.state.page} not found.</p>;\n    }\n  }\n}\n\nconst root = new ClientRoot();\nconst externalClientFacade = new ExternalClientFacade(root);\nconst ingameExternalClientFacade = new IngameExternalClientFacade();\nconst serializer = new Serializer();\nconst clientCommunicator = new ClientCommunicator(\"localhost\", \"8080\", serializer, externalClientFacade, ingameExternalClientFacade);\nconst serverProxy = new ServerProxy(clientCommunicator);\nconst internalClientFacade = new InternalClientFacade(serverProxy, root);\nconst ingameServerProxy = new IngameServerProxy();\nconst ingameRoot = new IngameClientRoot();\nconst ingameInternalClientFacade = new IngameInternalClientFacade(ingameServerProxy, ingameRoot);\n\nReactDOM.render(\n  <MainComponent services={internalClientFacade} ingameServices={ingameInternalClientFacade} ingameRoot={ingameRoot} root={root}/>,\n  document.getElementById(\"example\")\n);\n","module.exports = React;","module.exports = ReactDOM;"],"sourceRoot":""}