Both of us have a seprate serverCommunicator classes. They are almost the same, but mine has the line of code:
        server.createContext("/command", new CommandHandler());
Make sure you use the one with this line of code in it.

As far as using strings for the argument types, a question we need to resolve is; when do we convert the strings to a class types?
Should we do it when the constructor is called, or when execute is called? I think doing it when the constructor is called makes more
sense, because then we know immediately if the parameters are valid or not. In this case, the command object would
immediately convert the String[] to Class<?>[] and save it as Class<?>[]. But there may be advantages to doing the conversion
in the execute function. Let me know what you think. Right now I made it convert the strings in the constructor.

When the things above are resolved, my code should work. The only other thing is I might have to rethink how and when
exceptions are caught and thrown.

I went over your code. Good job it is nice and clean.
In my code, take a quick look at the serializerTester. It shows how to call the GenericCommand constructor.

Postman will be an important tool while making our server. To use it, set it to POST, set the URL to localhost:8080/command,
and in the body, put some json like:
[{"_className":"server.ServerFacade","_methodName":"login","_paramTypes":["java.lang.String", "java.lang.String"],"_paramValues":["myUsername", "myPassword"]}]
(in the body settings, you might have to specify raw json). But probably not.

I will have some time this weekend, but I have something Saturday from 2.30 to 5pm.
I live really close to campus (700n 800e). Let me know if we can meet up.
